#include "VehicleStand.h"#include "Stand.h"#include "Vehicle.h"void VehicleStandGroup::InsertNewStand(const Stand& stand) {	auto aggregatePtr = std::make_unique<StandVehicleAggregate>();	aggregatePtr->setStand(stand);	m_standVehicleInventory.push_back(std::move(aggregatePtr));}StandFunctionReturnValue::valueReturn VehicleStandGroup::insertNewVehicleStand(std::unique_ptr<Vehicle> vehicle, Stand& stand) {	for (auto& it : m_standVehicleInventory) {		if (stand.getCode() == it->getStand().getCode()) {			it->setVehicle(std::move(vehicle));			return StandFunctionReturnValue::valueReturn::standInsertedSucceed;		}	}	return StandFunctionReturnValue::valueReturn::standNotFound;}